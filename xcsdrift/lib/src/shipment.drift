import '../fldconv.dart';
import 'morph/morph.dart';
import 'shipment_conv.dart';


CREATE TABLE shipment (
    "shipment_id" VARCHAR(255) NOT NULL PRIMARY KEY,
    "shipment_type_id" VARCHAR(22),
    "status_id" VARCHAR(22),
    "primary_order_id" VARCHAR(22),
    "primary_return_id" VARCHAR(22),
    "primary_ship_group_seq_id" VARCHAR(22),
    "picklist_bin_id" VARCHAR(22),
    "estimated_ready_date" DATETIME(3),
    "estimated_ship_date" DATETIME(3),
    "estimated_ship_work_eff_id" VARCHAR(22),
    "estimated_arrival_date" DATETIME(3),
    "estimated_arrival_work_eff_id" VARCHAR(22),
    "latest_cancel_date" DATETIME(3),
    "estimated_ship_cost" DECIMAL(18,2),
    "currency_uom_id" VARCHAR(22),
    "handling_instructions" VARCHAR(255),
    "origin_facility_id" VARCHAR(22),
    "destination_facility_id" VARCHAR(22),
    "origin_contact_mech_id" VARCHAR(22),
    "origin_telecom_number_id" VARCHAR(22),
    "destination_contact_mech_id" VARCHAR(22),
    "destination_telecom_number_id" VARCHAR(22),
    "party_id_to" VARCHAR(22),
    "party_id_from" VARCHAR(22),
    "additional_shipping_charge" DECIMAL(18,2),
    "addtl_shipping_charge_desc" VARCHAR(255),
    "created_date" DATETIME(3),
    "created_by_user_login" VARCHAR(250),
    "last_modified_date" DATETIME(3),
    "last_modified_by_user_login" VARCHAR(250),
    "last_updated_tx_stamp" DATETIME(3),
    "created_tx_stamp" DATETIME(3),
    "tenant_id" VARCHAR(22),
    "ship_bin_id" VARCHAR(22),
    "ncopies" DECIMAL(18,6),
    "account_id" VARCHAR(22),
    "token_id" VARCHAR(22),
    "origin" CHAR(1),
    "shipment_erc_id" VARCHAR(22),
    "evict" BOOLEAN,
    "tag1" VARCHAR(100),
    "tag2" VARCHAR(100),
    "tag3" VARCHAR(100),
    "more_tags" TEXT MAPPED BY `const StringListConverter()`,
    "acl" TEXT MAPPED BY `const StringMultimapConverter()`,
    "resource_id" VARCHAR(250),
    "resource_type" VARCHAR(60),

    -- rel: one (no public-types)

    -- rel: many
    "shipment_item_billing" TEXT MAPPED BY `const ShipmentItemBillingListConverter()`,
    "shipping_document" TEXT MAPPED BY `const ShippingDocumentListConverter()`,
    "shipment_item_feature" TEXT MAPPED BY `const ShipmentItemFeatureListConverter()`,
    "shipment_package_route_seg" TEXT MAPPED BY `const ShipmentPackageRouteSegListConverter()`,
    "shipment_route_segment" TEXT MAPPED BY `const ShipmentRouteSegmentListConverter()`,
    "shipment_status" TEXT MAPPED BY `const ShipmentStatusListConverter()`,
    "shipment_package" TEXT MAPPED BY `const ShipmentPackageListConverter()`,
    "shipment_receipt" TEXT MAPPED BY `const ShipmentReceiptListConverter()`,
    "shipment_multisig" TEXT MAPPED BY `const ShipmentMultisigListConverter()`,
    "shipment_package_content" TEXT MAPPED BY `const ShipmentPackageContentListConverter()`,
    "shipment_item" TEXT MAPPED BY `const ShipmentItemListConverter()`,
    "shipment_geo_force" TEXT MAPPED BY `const ShipmentGeoForceListConverter()`,
    "reserved_flag" INTEGER
);

allShipments: SELECT * FROM shipment;
clearShipments: DELETE FROM shipment;
addShipment: INSERT INTO shipment $el;
getShipment: SELECT * FROM shipment WHERE shipment_id = ?;
deleteShipment: DELETE FROM shipment WHERE shipment_id = :id;
queryShipmentsByResourceBinder: SELECT * FROM shipment WHERE resource_type = :resType AND resource_id = :resId;




