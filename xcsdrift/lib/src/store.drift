import '../fldconv.dart';
import 'morph/morph.dart';
import 'store_conv.dart';


CREATE TABLE product_store (
    product_store_id VARCHAR(255) NOT NULL PRIMARY KEY,
    primary_store_group_id VARCHAR(22),
    store_name VARCHAR(100),
    company_name VARCHAR(100),
    title VARCHAR(100),
    subtitle VARCHAR(255),
    pay_to_party_id VARCHAR(22),
    days_to_cancel_non_pay BIGINT,
    manual_auth_is_capture CHAR(1),
    prorate_shipping CHAR(1),
    prorate_taxes CHAR(1),
    view_cart_on_add CHAR(1),
    auto_save_cart CHAR(1),
    auto_approve_reviews CHAR(1),
    is_demo_store CHAR(1),
    is_immediately_fulfilled CHAR(1),
    inventory_facility_id VARCHAR(22),
    one_inventory_facility CHAR(1),
    check_inventory CHAR(1),
    reserve_inventory CHAR(1),
    reserve_order_enum_id VARCHAR(22),
    require_inventory CHAR(1),
    balance_res_on_order_creation CHAR(1),
    requirement_method_enum_id VARCHAR(22),
    order_number_prefix VARCHAR(60),
    default_locale_string VARCHAR(10),
    default_currency_uom_id VARCHAR(22),
    default_time_zone_string VARCHAR(60),
    default_sales_channel_enum_id VARCHAR(22),
    allow_password CHAR(1),
    default_password VARCHAR(255),
    explode_order_items CHAR(1),
    check_gc_balance CHAR(1),
    retry_failed_auths CHAR(1),
    header_approved_status VARCHAR(22),
    item_approved_status VARCHAR(22),
    digital_item_approved_status VARCHAR(22),
    header_declined_status VARCHAR(22),
    item_declined_status VARCHAR(22),
    header_cancel_status VARCHAR(22),
    item_cancel_status VARCHAR(22),
    auth_declined_message VARCHAR(255),
    auth_fraud_message VARCHAR(255),
    auth_error_message VARCHAR(255),
    visual_theme_id VARCHAR(22),
    store_credit_account_enum_id VARCHAR(22),
    use_primary_email_username CHAR(1),
    require_customer_role CHAR(1),
    auto_invoice_digital_items CHAR(1),
    req_ship_addr_for_dig_items CHAR(1),
    show_checkout_gift_options CHAR(1),
    select_payment_type_per_item CHAR(1),
    show_prices_with_vat_tax CHAR(1),
    show_tax_is_exempt CHAR(1),
    vat_tax_auth_geo_id VARCHAR(22),
    vat_tax_auth_party_id VARCHAR(22),
    enable_auto_suggestion_list CHAR(1),
    enable_dig_prod_upload CHAR(1),
    prod_search_exclude_variants CHAR(1),
    dig_prod_upload_category_id VARCHAR(22),
    auto_order_cc_try_exp CHAR(1),
    auto_order_cc_try_other_cards CHAR(1),
    auto_order_cc_try_later_nsf CHAR(1),
    auto_order_cc_try_later_max BIGINT,
    store_credit_valid_days BIGINT,
    auto_approve_invoice CHAR(1),
    auto_approve_order CHAR(1),
    ship_if_capture_fails CHAR(1),
    set_owner_upon_issuance CHAR(1),
    req_return_inventory_receive CHAR(1),
    add_to_cart_remove_incompat CHAR(1),
    add_to_cart_replace_upsell CHAR(1),
    split_pay_pref_per_shp_grp CHAR(1),
    managed_by_lot CHAR(1),
    show_out_of_stock_products CHAR(1),
    order_decimal_quantity CHAR(1),
    allow_comment CHAR(1),
    allocate_inventory CHAR(1),
    last_updated_tx_stamp DATETIME(3),
    created_tx_stamp DATETIME(3),
    tenant_id VARCHAR(22),
    evict BOOLEAN,
    tag1 VARCHAR(100),
    tag2 VARCHAR(100),
    tag3 VARCHAR(100),
    more_tags TEXT MAPPED BY `const StringListConverter()`,
    jointers TEXT MAPPED BY `const StringMapConverter()`,
    multi_jointers TEXT MAPPED BY `const StringMultimapConverter()`,
    acl TEXT MAPPED BY `const StringMultimapConverter()`,
    telephone VARCHAR(60),
    email VARCHAR(320),
    place_id VARCHAR(22),

    -- rel: one (no public-types)

    -- rel: many
    product_store_promo_appl TEXT MAPPED BY `const ProductStorePromoApplListConverter()`,
    product_store_email_setting TEXT MAPPED BY `const ProductStoreEmailSettingListConverter()`,
    product_store_facility TEXT MAPPED BY `const ProductStoreFacilityListConverter()`,
    product_store_payment_setting TEXT MAPPED BY `const ProductStorePaymentSettingListConverter()`,
    product_store_keyword_ovrd TEXT MAPPED BY `const ProductStoreKeywordOvrdListConverter()`,
    product_store_survey_appl TEXT MAPPED BY `const ProductStoreSurveyApplListConverter()`,
    product_store_catalog TEXT MAPPED BY `const ProductStoreCatalogListConverter()`,
    product_store_bunch TEXT MAPPED BY `const ProductStoreBunchListConverter()`,
    product_store_role TEXT MAPPED BY `const ProductStoreRoleListConverter()`,
    reserved_flag INTEGER
);

allProductStores: SELECT * FROM product_store;
clearProductStores: DELETE FROM product_store;
addProductStore: INSERT INTO product_store $el;
getProductStore: SELECT * FROM product_store WHERE product_store_id = ?;
deleteProductStore: DELETE FROM product_store WHERE product_store_id = :id;




