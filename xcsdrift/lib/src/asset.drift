import '../fldconv.dart';
import 'morph/morph.dart';
import 'asset_conv.dart';


CREATE TABLE asset (
    "asset_id" VARCHAR(255) NOT NULL PRIMARY KEY,
    "creator" VARCHAR(22),
    "uri" VARCHAR(2000),
    "data" LongBlob MAPPED BY `const NativeFldConverter()`,
    "group" VARCHAR(100),
    "parent_asset_id" VARCHAR(22),
    "seq_id" BIGINT,
    "erc" VARCHAR(22),
    "erc_type" VARCHAR(22),
    "token_id" VARCHAR(22),
    "accessors" TEXT MAPPED BY `const IntMapConverter()`,
    "tenant_id" VARCHAR(22),
    "last_updated_tx_stamp" DATETIME(3),
    "created_tx_stamp" DATETIME(3),
    "asset_type_id" VARCHAR(22),
    "status_id" VARCHAR(22),
    "tag1" VARCHAR(100),
    "tag2" VARCHAR(100),
    "tag3" VARCHAR(100),
    "more_tags" TEXT MAPPED BY `const StringListConverter()`,
    "evict" BOOLEAN,
    "acl" TEXT MAPPED BY `const StringMultimapConverter()`,
    "resource_id" VARCHAR(250),
    "resource_type" VARCHAR(60),

    -- rel: one (no public-types)
    "asset_type" TEXT MAPPED BY `const AssetTypeConverter()`,

    -- rel: many
    "asset_status" TEXT MAPPED BY `const AssetStatusListConverter()`,
    "reserved_flag" INTEGER
);

allAssets: SELECT * FROM asset;
clearAssets: DELETE FROM asset;
addAsset: INSERT INTO asset $el;
getAsset: SELECT * FROM asset WHERE asset_id = ?;
deleteAsset: DELETE FROM asset WHERE asset_id = :id;
queryAssetsByResourceBinder: SELECT * FROM asset WHERE resource_type = :resType AND resource_id = :resId;




